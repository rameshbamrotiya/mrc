#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unmehta.WebPortal.Data.Hospital
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UNMehta")]
	public partial class DoctorMasterWithDetailsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DoctorMasterWithDetailsDataContext() : 
				base(global::Unmehta.WebPortal.Data.Properties.Settings.Default.UNMehtaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorMasterWithDetailsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorMasterWithDetailsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorMasterWithDetailsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoctorMasterWithDetailsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDoctorAchivementsMasterDetailsByDocId")]
		public ISingleResult<GetAllDoctorAchivementsMasterDetailsByDocIdResult> GetAllDoctorAchivementsMasterDetailsByDocId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docId);
			return ((ISingleResult<GetAllDoctorAchivementsMasterDetailsByDocIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDoctorSpecializationMasterDetailsByDocId")]
		public ISingleResult<GetAllDoctorSpecializationMasterDetailsByDocIdResult> GetAllDoctorSpecializationMasterDetailsByDocId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docId);
			return ((ISingleResult<GetAllDoctorSpecializationMasterDetailsByDocIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDoctorExpertiseMasterDetailsByDocId")]
		public ISingleResult<GetAllDoctorExpertiseMasterDetailsByDocIdResult> GetAllDoctorExpertiseMasterDetailsByDocId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docId);
			return ((ISingleResult<GetAllDoctorExpertiseMasterDetailsByDocIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDoctorPublicationsMasterDetailsByDocId")]
		public ISingleResult<GetAllDoctorPublicationsMasterDetailsByDocIdResult> GetAllDoctorPublicationsMasterDetailsByDocId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docId);
			return ((ISingleResult<GetAllDoctorPublicationsMasterDetailsByDocIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDoctorQualificationMasterDetailsByDocId")]
		public ISingleResult<GetAllDoctorQualificationMasterDetailsByDocIdResult> GetAllDoctorQualificationMasterDetailsByDocId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docId);
			return ((ISingleResult<GetAllDoctorQualificationMasterDetailsByDocIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateDoctorAchivementsMasterDetails")]
		public ISingleResult<InsertOrUpdateDoctorAchivementsMasterDetailsResult> InsertOrUpdateDoctorAchivementsMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AchievementsName", DbType="NVarChar(MAX)")] string achievementsName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, docId, achievementsName, username);
			return ((ISingleResult<InsertOrUpdateDoctorAchivementsMasterDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateDoctorExpertiseMasterDetails")]
		public ISingleResult<InsertOrUpdateDoctorExpertiseMasterDetailsResult> InsertOrUpdateDoctorExpertiseMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpertiseName", DbType="NVarChar(MAX)")] string expertiseName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, docId, expertiseName, username);
			return ((ISingleResult<InsertOrUpdateDoctorExpertiseMasterDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateDoctorPublicationsMasterDetails")]
		public ISingleResult<InsertOrUpdateDoctorPublicationsMasterDetailsResult> InsertOrUpdateDoctorPublicationsMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PublicationsName", DbType="NVarChar(MAX)")] string publicationsName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, docId, publicationsName, username);
			return ((ISingleResult<InsertOrUpdateDoctorPublicationsMasterDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateDoctorQualificationMasterDetails")]
		public ISingleResult<InsertOrUpdateDoctorQualificationMasterDetailsResult> InsertOrUpdateDoctorQualificationMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QualificationName", DbType="NVarChar(MAX)")] string qualificationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QualificationShortName", DbType="NVarChar(MAX)")] string qualificationShortName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, docId, qualificationName, qualificationShortName, username);
			return ((ISingleResult<InsertOrUpdateDoctorQualificationMasterDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateDoctorSpecializationMasterDetails")]
		public ISingleResult<InsertOrUpdateDoctorSpecializationMasterDetailsResult> InsertOrUpdateDoctorSpecializationMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SpecializationId", DbType="BigInt")] System.Nullable<long> specializationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, docId, specializationId, username);
			return ((ISingleResult<InsertOrUpdateDoctorSpecializationMasterDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateEducationQualificationMaster")]
		public ISingleResult<InsertOrUpdateEducationQualificationMasterResult> InsertOrUpdateEducationQualificationMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EduQualificationName", DbType="NVarChar(500)")] string eduQualificationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(500)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, eduQualificationName, isActive, userName);
			return ((ISingleResult<InsertOrUpdateEducationQualificationMasterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveDoctorQualificationMasterDetails")]
		public int RemoveDoctorQualificationMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(MAX)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveDoctorPublicationsMasterDetails")]
		public int RemoveDoctorPublicationsMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(MAX)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveDoctorMaster")]
		public int RemoveDoctorMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(MAX)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docId, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveDoctorExpertiseMasterDetails")]
		public int RemoveDoctorExpertiseMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(MAX)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveDoctorAchivementsMasterDetails")]
		public int RemoveDoctorAchivementsMasterDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(MAX)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveDoctorSpecializationMaster")]
		public int RemoveDoctorSpecializationMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(MAX)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, userName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDoctorByLanguageId")]
		public ISingleResult<GetAllDoctorByLanguageIdResult> GetAllDoctorByLanguageId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageId", DbType="BigInt")] System.Nullable<long> languageId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), languageId);
			return ((ISingleResult<GetAllDoctorByLanguageIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDoctorMaster")]
		public ISingleResult<GetAllDoctorMasterResult> GetAllDoctorMaster()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllDoctorMasterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateDoctorMaster")]
		public ISingleResult<InsertOrUpdateDoctorMasterResult> InsertOrUpdateDoctorMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageId", DbType="BigInt")] System.Nullable<long> languageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SequanceNo", DbType="BigInt")] System.Nullable<long> sequanceNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoctorFirstName", DbType="NVarChar(MAX)")] string doctorFirstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoctorMiddleName", DbType="NVarChar(MAX)")] string doctorMiddleName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoctorLastName", DbType="NVarChar(MAX)")] string doctorLastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoctorDescription", DbType="NVarChar(MAX)")] string doctorDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoctorShotDescription", DbType="NVarChar(MAX)")] string doctorShotDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DoctorProfilePic", DbType="NVarChar(MAX)")] string doctorProfilePic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, languageId, sequanceNo, doctorFirstName, doctorMiddleName, doctorLastName, doctorDescription, doctorShotDescription, doctorProfilePic, isActive, userName);
			return ((ISingleResult<InsertOrUpdateDoctorMasterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDoctorMasterByDocIdAndLangId")]
		public ISingleResult<GetDoctorMasterByDocIdAndLangIdResult> GetDoctorMasterByDocIdAndLangId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DocId", DbType="BigInt")] System.Nullable<long> docId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanId", DbType="BigInt")] System.Nullable<long> lanId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docId, lanId);
			return ((ISingleResult<GetDoctorMasterByDocIdAndLangIdResult>)(result.ReturnValue));
		}
	}
	
	public partial class GetAllDoctorAchivementsMasterDetailsByDocIdResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _DocId;
		
		private string _AchievementsName;
		
		public GetAllDoctorAchivementsMasterDetailsByDocIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", DbType="BigInt")]
		public System.Nullable<long> DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					this._DocId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementsName", DbType="NVarChar(MAX)")]
		public string AchievementsName
		{
			get
			{
				return this._AchievementsName;
			}
			set
			{
				if ((this._AchievementsName != value))
				{
					this._AchievementsName = value;
				}
			}
		}
	}
	
	public partial class GetAllDoctorSpecializationMasterDetailsByDocIdResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _SpecializationId;
		
		private string _SpecializationName;
		
		public GetAllDoctorSpecializationMasterDetailsByDocIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecializationId", DbType="BigInt")]
		public System.Nullable<long> SpecializationId
		{
			get
			{
				return this._SpecializationId;
			}
			set
			{
				if ((this._SpecializationId != value))
				{
					this._SpecializationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecializationName", DbType="NVarChar(MAX)")]
		public string SpecializationName
		{
			get
			{
				return this._SpecializationName;
			}
			set
			{
				if ((this._SpecializationName != value))
				{
					this._SpecializationName = value;
				}
			}
		}
	}
	
	public partial class GetAllDoctorExpertiseMasterDetailsByDocIdResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _DocId;
		
		private string _ExpertiseName;
		
		public GetAllDoctorExpertiseMasterDetailsByDocIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", DbType="BigInt")]
		public System.Nullable<long> DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					this._DocId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertiseName", DbType="NVarChar(MAX)")]
		public string ExpertiseName
		{
			get
			{
				return this._ExpertiseName;
			}
			set
			{
				if ((this._ExpertiseName != value))
				{
					this._ExpertiseName = value;
				}
			}
		}
	}
	
	public partial class GetAllDoctorPublicationsMasterDetailsByDocIdResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _DocId;
		
		private string _Publications;
		
		public GetAllDoctorPublicationsMasterDetailsByDocIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", DbType="BigInt")]
		public System.Nullable<long> DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					this._DocId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publications", DbType="NVarChar(MAX)")]
		public string Publications
		{
			get
			{
				return this._Publications;
			}
			set
			{
				if ((this._Publications != value))
				{
					this._Publications = value;
				}
			}
		}
	}
	
	public partial class GetAllDoctorQualificationMasterDetailsByDocIdResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _DocId;
		
		private string _QualificationName;
		
		private string _QualificationShortName;
		
		public GetAllDoctorQualificationMasterDetailsByDocIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", DbType="BigInt")]
		public System.Nullable<long> DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					this._DocId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationName", DbType="NVarChar(MAX)")]
		public string QualificationName
		{
			get
			{
				return this._QualificationName;
			}
			set
			{
				if ((this._QualificationName != value))
				{
					this._QualificationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationShortName", DbType="NVarChar(MAX)")]
		public string QualificationShortName
		{
			get
			{
				return this._QualificationShortName;
			}
			set
			{
				if ((this._QualificationShortName != value))
				{
					this._QualificationShortName = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateDoctorAchivementsMasterDetailsResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateDoctorAchivementsMasterDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateDoctorExpertiseMasterDetailsResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateDoctorExpertiseMasterDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateDoctorPublicationsMasterDetailsResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateDoctorPublicationsMasterDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateDoctorQualificationMasterDetailsResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateDoctorQualificationMasterDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateDoctorSpecializationMasterDetailsResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateDoctorSpecializationMasterDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateEducationQualificationMasterResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateEducationQualificationMasterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class GetAllDoctorByLanguageIdResult
	{
		
		private long _Id;
		
		private string _Name;
		
		public GetAllDoctorByLanguageIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetAllDoctorMasterResult
	{
		
		private long _Id;
		
		private string _DoctorFirstName;
		
		private string _DoctorMiddleName;
		
		private string _DoctorLastName;
		
		private string _DoctorShotDescription;
		
		private string _DoctorDescription;
		
		private string _DoctorProfilePic;
		
		private System.Nullable<long> _SequanceNo;
		
		private System.Nullable<bool> _IsActive;
		
		public GetAllDoctorMasterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstName", DbType="NVarChar(MAX)")]
		public string DoctorFirstName
		{
			get
			{
				return this._DoctorFirstName;
			}
			set
			{
				if ((this._DoctorFirstName != value))
				{
					this._DoctorFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorMiddleName", DbType="NVarChar(MAX)")]
		public string DoctorMiddleName
		{
			get
			{
				return this._DoctorMiddleName;
			}
			set
			{
				if ((this._DoctorMiddleName != value))
				{
					this._DoctorMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(MAX)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorShotDescription", DbType="NVarChar(MAX)")]
		public string DoctorShotDescription
		{
			get
			{
				return this._DoctorShotDescription;
			}
			set
			{
				if ((this._DoctorShotDescription != value))
				{
					this._DoctorShotDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDescription", DbType="NVarChar(MAX)")]
		public string DoctorDescription
		{
			get
			{
				return this._DoctorDescription;
			}
			set
			{
				if ((this._DoctorDescription != value))
				{
					this._DoctorDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorProfilePic", DbType="NVarChar(MAX)")]
		public string DoctorProfilePic
		{
			get
			{
				return this._DoctorProfilePic;
			}
			set
			{
				if ((this._DoctorProfilePic != value))
				{
					this._DoctorProfilePic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequanceNo", DbType="BigInt")]
		public System.Nullable<long> SequanceNo
		{
			get
			{
				return this._SequanceNo;
			}
			set
			{
				if ((this._SequanceNo != value))
				{
					this._SequanceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateDoctorMasterResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateDoctorMasterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class GetDoctorMasterByDocIdAndLangIdResult
	{
		
		private long _Id;
		
		private string _DoctorFirstName;
		
		private string _DoctorMiddleName;
		
		private string _DoctorLastName;
		
		private string _DoctorShotDescription;
		
		private string _DoctorDescription;
		
		private string _DoctorProfilePic;
		
		private System.Nullable<long> _SequanceNo;
		
		private System.Nullable<bool> _IsActive;
		
		public GetDoctorMasterByDocIdAndLangIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorFirstName", DbType="NVarChar(MAX)")]
		public string DoctorFirstName
		{
			get
			{
				return this._DoctorFirstName;
			}
			set
			{
				if ((this._DoctorFirstName != value))
				{
					this._DoctorFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorMiddleName", DbType="NVarChar(MAX)")]
		public string DoctorMiddleName
		{
			get
			{
				return this._DoctorMiddleName;
			}
			set
			{
				if ((this._DoctorMiddleName != value))
				{
					this._DoctorMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorLastName", DbType="NVarChar(MAX)")]
		public string DoctorLastName
		{
			get
			{
				return this._DoctorLastName;
			}
			set
			{
				if ((this._DoctorLastName != value))
				{
					this._DoctorLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorShotDescription", DbType="NVarChar(MAX)")]
		public string DoctorShotDescription
		{
			get
			{
				return this._DoctorShotDescription;
			}
			set
			{
				if ((this._DoctorShotDescription != value))
				{
					this._DoctorShotDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorDescription", DbType="NVarChar(MAX)")]
		public string DoctorDescription
		{
			get
			{
				return this._DoctorDescription;
			}
			set
			{
				if ((this._DoctorDescription != value))
				{
					this._DoctorDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorProfilePic", DbType="NVarChar(MAX)")]
		public string DoctorProfilePic
		{
			get
			{
				return this._DoctorProfilePic;
			}
			set
			{
				if ((this._DoctorProfilePic != value))
				{
					this._DoctorProfilePic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequanceNo", DbType="BigInt")]
		public System.Nullable<long> SequanceNo
		{
			get
			{
				return this._SequanceNo;
			}
			set
			{
				if ((this._SequanceNo != value))
				{
					this._SequanceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
