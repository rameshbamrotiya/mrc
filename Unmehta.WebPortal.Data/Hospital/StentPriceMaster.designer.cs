#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unmehta.WebPortal.Data.Hospital
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UNMehta")]
	public partial class StentPriceMasterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public StentPriceMasterDataContext() : 
				base(global::Unmehta.WebPortal.Data.Properties.Settings.Default.UNMehtaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StentPriceMasterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StentPriceMasterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StentPriceMasterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StentPriceMasterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllStentPriceTypeMasterByLanguageId")]
		public ISingleResult<GetAllStentPriceTypeMasterByLanguageIdResult> GetAllStentPriceTypeMasterByLanguageId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangId", DbType="BigInt")] System.Nullable<long> langId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), langId);
			return ((ISingleResult<GetAllStentPriceTypeMasterByLanguageIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateSentPriceTypeMaster")]
		public ISingleResult<InsertOrUpdateSentPriceTypeMasterResult> InsertOrUpdateSentPriceTypeMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LanguageId", DbType="BigInt")] System.Nullable<long> languageId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsVisableInQuickLink", DbType="Bit")] System.Nullable<bool> isVisableInQuickLink, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StentPriceDesc", DbType="NVarChar(MAX)")] string stentPriceDesc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, languageId, isActive, isVisableInQuickLink, stentPriceDesc, username);
			return ((ISingleResult<InsertOrUpdateSentPriceTypeMasterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveStentPriceTypeMaster")]
		public int RemoveStentPriceTypeMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, username);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class GetAllStentPriceTypeMasterByLanguageIdResult
	{
		
		private int _Id;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsVisableInQuickLink;
		
		private string _StentPriceDesc;
		
		public GetAllStentPriceTypeMasterByLanguageIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisableInQuickLink", DbType="Bit")]
		public System.Nullable<bool> IsVisableInQuickLink
		{
			get
			{
				return this._IsVisableInQuickLink;
			}
			set
			{
				if ((this._IsVisableInQuickLink != value))
				{
					this._IsVisableInQuickLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StentPriceDesc", DbType="NVarChar(MAX)")]
		public string StentPriceDesc
		{
			get
			{
				return this._StentPriceDesc;
			}
			set
			{
				if ((this._StentPriceDesc != value))
				{
					this._StentPriceDesc = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateSentPriceTypeMasterResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateSentPriceTypeMasterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
