#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unmehta.WebPortal.Data.Hospital
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UNMehta")]
	public partial class AffilationMasterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public AffilationMasterDataContext() : 
				base(global::Unmehta.WebPortal.Data.Properties.Settings.Default.UNMehtaConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public AffilationMasterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AffilationMasterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AffilationMasterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AffilationMasterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllAffilationMasterImageDetailsByAffilationIdAndLangId")]
		public ISingleResult<GetAllAffilationMasterImageDetailsByAffilationIdAndLangIdResult> GetAllAffilationMasterImageDetailsByAffilationIdAndLangId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AffilationId", DbType="BigInt")] System.Nullable<long> affilationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangId", DbType="BigInt")] System.Nullable<long> langId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), affilationId, langId);
			return ((ISingleResult<GetAllAffilationMasterImageDetailsByAffilationIdAndLangIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertAffilationMasterImageDetails")]
		public ISingleResult<InsertAffilationMasterImageDetailsResult> InsertAffilationMasterImageDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AffilationId", DbType="BigInt")] System.Nullable<long> affilationId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangId", DbType="BigInt")] System.Nullable<long> langId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImageName", DbType="NVarChar(MAX)")] string imageName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), affilationId, langId, imageName, username);
			return ((ISingleResult<InsertAffilationMasterImageDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveAffilationMaster")]
		public int RemoveAffilationMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveAffilationMasterImageDetails")]
		public int RemoveAffilationMasterImageDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AffilationId", DbType="BigInt")] System.Nullable<long> affilationId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), affilationId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrUpdateAffilationMaster")]
		public ISingleResult<InsertOrUpdateAffilationMasterResult> InsertOrUpdateAffilationMaster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangId", DbType="BigInt")] System.Nullable<long> langId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MetaTitle", DbType="NVarChar(MAX)")] string metaTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ImagePath", DbType="NVarChar(MAX)")] string imagePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MetaDescription", DbType="NVarChar(MAX)")] string metaDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AffilationName", DbType="NVarChar(MAX)")] string affilationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AffilationDescription", DbType="NVarChar(MAX)")] string affilationDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="NVarChar(MAX)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, langId, metaTitle, imagePath, metaDescription, affilationName, affilationDescription, username, isActive);
			return ((ISingleResult<InsertOrUpdateAffilationMasterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllAffilationMasterByLangId")]
		public ISingleResult<GetAllAffilationMasterByLangIdResult> GetAllAffilationMasterByLangId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangId", DbType="BigInt")] System.Nullable<long> langId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), langId);
			return ((ISingleResult<GetAllAffilationMasterByLangIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllAffilationMasterByLangId")]
		public ISingleResult<GetAllAffilationMasterByLangIdResult1> GetAllAffilationMasterByLangId1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LangId", DbType="BigInt")] System.Nullable<long> langId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), langId);
			return ((ISingleResult<GetAllAffilationMasterByLangIdResult1>)(result.ReturnValue));
		}
	}
	
	public partial class GetAllAffilationMasterImageDetailsByAffilationIdAndLangIdResult
	{
		
		private long _Id;
		
		private System.Nullable<long> _AffilationId;
		
		private System.Nullable<long> _LanguageId;
		
		private string _ImageName;
		
		public GetAllAffilationMasterImageDetailsByAffilationIdAndLangIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffilationId", DbType="BigInt")]
		public System.Nullable<long> AffilationId
		{
			get
			{
				return this._AffilationId;
			}
			set
			{
				if ((this._AffilationId != value))
				{
					this._AffilationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageId", DbType="BigInt")]
		public System.Nullable<long> LanguageId
		{
			get
			{
				return this._LanguageId;
			}
			set
			{
				if ((this._LanguageId != value))
				{
					this._LanguageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="NVarChar(MAX)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this._ImageName = value;
				}
			}
		}
	}
	
	public partial class InsertAffilationMasterImageDetailsResult
	{
		
		private System.Nullable<decimal> _RecId;
		
		public InsertAffilationMasterImageDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class InsertOrUpdateAffilationMasterResult
	{
		
		private System.Nullable<long> _RecId;
		
		public InsertOrUpdateAffilationMasterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecId", DbType="BigInt")]
		public System.Nullable<long> RecId
		{
			get
			{
				return this._RecId;
			}
			set
			{
				if ((this._RecId != value))
				{
					this._RecId = value;
				}
			}
		}
	}
	
	public partial class GetAllAffilationMasterByLangIdResult
	{
		
		private long _Id;
		
		private string _AffilationName;
		
		private string _AffilationDescription;
		
		private string _MetaTitle;
		
		private string _MetaDescription;
		
		private string _ImagePath;
		
		private System.Nullable<bool> _IsVisible;
		
		public GetAllAffilationMasterByLangIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffilationName", DbType="NVarChar(MAX)")]
		public string AffilationName
		{
			get
			{
				return this._AffilationName;
			}
			set
			{
				if ((this._AffilationName != value))
				{
					this._AffilationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffilationDescription", DbType="NVarChar(MAX)")]
		public string AffilationDescription
		{
			get
			{
				return this._AffilationDescription;
			}
			set
			{
				if ((this._AffilationDescription != value))
				{
					this._AffilationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(MAX)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this._MetaTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this._MetaDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this._IsVisible = value;
				}
			}
		}
	}
	
	public partial class GetAllAffilationMasterByLangIdResult1
	{
		
		private long _Id;
		
		private string _AffilationName;
		
		private string _AffilationDescription;
		
		private string _MetaTitle;
		
		private string _MetaDescription;
		
		private string _ImagePath;
		
		private System.Nullable<bool> _IsVisible;
		
		public GetAllAffilationMasterByLangIdResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffilationName", DbType="NVarChar(MAX)")]
		public string AffilationName
		{
			get
			{
				return this._AffilationName;
			}
			set
			{
				if ((this._AffilationName != value))
				{
					this._AffilationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffilationDescription", DbType="NVarChar(MAX)")]
		public string AffilationDescription
		{
			get
			{
				return this._AffilationDescription;
			}
			set
			{
				if ((this._AffilationDescription != value))
				{
					this._AffilationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(MAX)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this._MetaTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NVarChar(MAX)")]
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this._MetaDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this._ImagePath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit")]
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this._IsVisible = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
